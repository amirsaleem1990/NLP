# remove punctuations

import string
words = text.split()
table = str.maketrans('', '', string.punctuation)
punctuations_removed = [w.translate(table) for w in words]
--------------------------------------------------------------------
# split text into sentences
from nltk import sent_tokenize
sentences = sent_tokenize(text)
# it returns list of lists, each lish is a sentence
--------------------------------------------------------------------
# remove punctuations and stop words
snow = nltk.stem.SnowballStemmer('english')
for sentence in text:
	cleanr = re.compile('<.*?>')
    sentence = re.sub(cleanr, ' ', sentence)      		     #Removing HTML tags
    sentence = re.sub(r'[?|!|\'|"|#]',r'',sentence)
    sentence = re.sub(r'[.|,|)|(|\|/]',r' ',sentence)        #Removing Punctuations
words = [snow.stem(word) for word in sentence.split() if word not in stopwords.words('english')]
--------------------------------------------------------------------
from nltk.corpus import stopwords                  					 #Stopwords corpus
from nltk.stem import PorterStemmer             				     # Stemmer

from sklearn.feature_extraction.text import CountVectorizer          #For Bag of words
from sklearn.feature_extraction.text import TfidfVectorizer          #For TF-IDF
from gensim.models import Word2Vec                                   #For Word2Vec
--------------------------------------------------------------------
# text cleaning
# https://stackoverflow.com/questions/48865150/pipeline-for-text-cleaning-processing-in-python
import nltk
import re
import string
from nltk.tokenize import word_tokenize, sent_tokenize
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer # or LancasterStemmer, RegexpStemmer, SnowballStemmer

default_stemmer = PorterStemmer()
default_stopwords = stopwords.words('english') # or any other list of your choice
def clean_text(text, ):

    def tokenize_text(text):
        return [w for s in sent_tokenize(text) for w in word_tokenize(s)]

    def remove_special_characters(text, characters=string.punctuation.replace('-', '')):
        tokens = tokenize_text(text)
        pattern = re.compile('[{}]'.format(re.escape(characters)))
        return ' '.join(filter(None, [pattern.sub('', t) for t in tokens]))

    def stem_text(text, stemmer=default_stemmer):
        tokens = tokenize_text(text)
        return ' '.join([stemmer.stem(t) for t in tokens])

    def remove_stopwords(text, stop_words=default_stopwords):
        tokens = [w for w in tokenize_text(text) if w not in stop_words]
        return ' '.join(tokens)

    text = text.strip(' ') # strip whitespaces
    text = text.lower() # lowercase
    text = stem_text(text) # stemming
    text = remove_special_characters(text) # remove punctuation and symbols
    text = remove_stopwords(text) # remove stopwords
    #text.strip(' ') # strip whitespaces again?
    return text
--------------------------------------------------------------------------
# english mistakes
# https://github.com/rfk/pyenchant/blob/master/website/content/tutorial.rst
from enchant.checker import SpellChecker
for i in df['columns']:
	chkr = SpellChecker("en_US")
	chkr.set_text(i)
	for err in chkr:
		print( "ERROR:", err.word)
--------------------------------------------------------------------------
# NOTE: run on ubuntu terminal
sudo apt-get install aspell
cat file.txt | aspell list
# return all english typo
